package com.investorriskreturnprofiling.aml.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PersonalDetailsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalDetailsAllPropertiesEquals(PersonalDetails expected, PersonalDetails actual) {
        assertPersonalDetailsAutoGeneratedPropertiesEquals(expected, actual);
        assertPersonalDetailsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalDetailsAllUpdatablePropertiesEquals(PersonalDetails expected, PersonalDetails actual) {
        assertPersonalDetailsUpdatableFieldsEquals(expected, actual);
        assertPersonalDetailsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalDetailsAutoGeneratedPropertiesEquals(PersonalDetails expected, PersonalDetails actual) {
        assertThat(expected)
            .as("Verify PersonalDetails auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalDetailsUpdatableFieldsEquals(PersonalDetails expected, PersonalDetails actual) {
        assertThat(expected)
            .as("Verify PersonalDetails relevant properties")
            .satisfies(e -> assertThat(e.getFullName()).as("check fullName").isEqualTo(actual.getFullName()))
            .satisfies(e -> assertThat(e.getDateOfBirth()).as("check dateOfBirth").isEqualTo(actual.getDateOfBirth()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonalDetailsUpdatableRelationshipsEquals(PersonalDetails expected, PersonalDetails actual) {
        // empty method
    }
}
